}
for (i in 1:nrow(historic)) {
historic$spend[i] <- (historic$spend[i] + runif(1, min=-500, max=500)) %>% round(digits = 2)
}
historic %>% head %>% formattable()
plot1 <- historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 20000)
ggplotly(plot1)
knitr::opts_chunk$set(echo = TRUE)
library(shinythemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
library(purrr)
library(broom)
library(stringr)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head
historic$spend <- 5000
for (i in 2:nrow(historic)) {
historic$spend[i] <- (historic$spend[i-1] + runif(1, min=30, max=50) - i/11) %>% round(2)
}
for (i in 1:nrow(historic)) {
historic$spend[i] <- (historic$spend[i] + runif(1, min=-500, max=500)) %>% round(digits = 2)
}
historic %>% head %>% formattable()
plot1 <- historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 20000)
ggplotly(plot1)
knitr::opts_chunk$set(echo = TRUE)
library(shinythemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
library(purrr)
library(broom)
library(stringr)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head
historic$spend <- 5000
for (i in 2:nrow(historic)) {
historic$spend[i] <- (historic$spend[i-1] + runif(1, min=30, max=50) - i/11) %>% round(2)
}
for (i in 1:nrow(historic)) {
historic$spend[i] <- (historic$spend[i] + runif(1, min=-500, max=500)) %>% round(digits = 2)
}
historic %>% head %>% formattable()
plot1 <- historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 20000)
ggplotly(plot1)
historic <- historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1 ~ "Sale",
!(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1) ~ "BAU"))
historic %>% datatable
knitr::opts_chunk$set(echo = TRUE)
library(shinythemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
library(purrr)
library(broom)
library(stringr)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head
historic$spend <- 5000
for (i in 2:nrow(historic)) {
historic$spend[i] <- (historic$spend[i-1] + runif(1, min=30, max=50) - i/11) %>% round(2)
}
for (i in 1:nrow(historic)) {
historic$spend[i] <- (historic$spend[i] + runif(1, min=-500, max=500)) %>% round(digits = 2)
}
historic %>% head %>% formattable()
plot1 <- historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 20000)
ggplotly(plot1)
historic <- historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1 ~ "Sale",
!(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1) ~ "BAU"))
historic %>% datatable
knitr::opts_chunk$set(echo = TRUE)
library(shinythemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
library(purrr)
library(broom)
library(stringr)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head
historic$spend <- 5000
for (i in 2:nrow(historic)) {
historic$spend[i] <- (historic$spend[i-1] + runif(1, min=30, max=50) - i/11) %>% round(2)
}
for (i in 1:nrow(historic)) {
historic$spend[i] <- (historic$spend[i] + runif(1, min=-500, max=500)) %>% round(digits = 2)
}
historic %>% head %>% formattable()
plot1 <- historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 20000)
ggplotly(plot1)
historic <- historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1 ~ "Sale",
!(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1) ~ "BAU"))
historic %>% datatable
knitr::opts_chunk$set(echo = TRUE)
library(shinythemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
library(purrr)
library(broom)
library(stringr)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head
historic$spend <- 5000
for (i in 2:nrow(historic)) {
historic$spend[i] <- (historic$spend[i-1] + runif(1, min=30, max=50) - i/11) %>% round(2)
}
for (i in 1:nrow(historic)) {
historic$spend[i] <- (historic$spend[i] + runif(1, min=-500, max=500)) %>% round(digits = 2)
}
historic %>% head %>% formattable()
plot1 <- historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 20000)
ggplotly(plot1)
historic <- historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1 ~ "Sale",
!(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1) ~ "BAU"))
historic %>% datatable
for (i in 1:nrow(historic)) {
if (historic$Sale[i]=="Sale") {
historic$spend[i] <- (historic$spend[i] + runif(1, min=2000, max=4000)) %>% round(2)
}
}
maxspend <- max(historic$spend)
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend)) +
ylim(0, maxspend+1000) + ylab("Spend")
historic$revenue <- 0
suppressWarnings(
for (i in 1:nrow(historic)) {
historic$revenue[i] <- (historic$spend[i] * (3.5 + runif(1, min=-.5, max=.5)+i/400)) %>% round(2)
}
)
suppressWarnings(
for (i in 1:nrow(historic)) {
if (historic$Sale=="Sale") {
historic$revenue[i] <- historic$revenue[i] * (runif(1, min=2, max=4)+i/100)
}
}
)
maxsrev <- max(historic$revenue)
plot3 <- historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
ggplotly(plot3)
historic %>%
mutate(ROAS = revenue/spend) %>%
slice(nrow(historic):360)
View(historic)
for (i in 1:nrow(historic)) {
if (historic$Sale[i]=="Sale") {
historic$spend[i] <- (historic$spend[i] + runif(1, min=2000, max=4000)) %>% round(2)
}
}
maxspend <- max(historic$spend)
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend)) +
ylim(0, maxspend+1000) + ylab("Spend")
historic$revenue <- 0
for (i in 1:nrow(historic)) {
historic$revenue[i] <- (historic$spend[i] * (3.5 + runif(1, min=-.5, max=.5)+i/400)) %>% round(2)
}
for (i in 1:nrow(historic)) {
if (historic$Sale=="Sale") {
historic$revenue[i] <- historic$revenue[i] * (runif(1, min=2, max=4)+i/100)
}
}
View(historic)
historic %>% ggplot(aes(x=date, y=revenue)) + geom_line()
historic %>% ggplot(aes(x=date, y=revenue)) + geom_line(col='blue')
historic %>% ggplot(aes(x=date, y=revenue)) + geom_line(col='blue')
plot3 <- historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
ggplotly(plot3)
plot3 <- historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ (1/0)
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
ggplotly(plot3)
check <- historic %>%   mutate(salevec = case_when(
Sale == "Sale" ~ (1/0)
))
View(check)
test <- data.frame(DATE=seq(from = as.POSIXct("2014-07-16 01:00"),
to = as.POSIXct("2014-07-30 00:00"),
by = "hour"),
count=floor(runif(336,1,100)))
test$weekend <- weekdays(test$DATE) %in% c("Saturday", "Sunday")
View(test)
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ TRUE,
Sale != "Sale" ~ FALSE
)) %>%
ggplot()
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ TRUE,
Sale != "Sale" ~ FALSE
)) %>%
ggplot() +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ TRUE,
Sale != "Sale" ~ FALSE
)) %>%
ggplot() +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) +
ylab("£")
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ TRUE,
Sale != "Sale" ~ FALSE
)) %>%
ggplot(aes(x=date)) +
geom_line(aes(y = spend), size = 1) +
geom_line(aes(y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) +
ylab("£")
historic %>% ggplot(aes(x=date, y=revenue)) + geom_line(col='blue')
historic %>% ggplot(aes(x=date, y=revenue)) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend))
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ TRUE,
Sale != "Sale" ~ FALSE
)) %>%
ggplot(aes(x=date, y = spend)) +
geom_line(size = 1) +
geom_line(aes(x=spend, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) +
ylab("£")
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ TRUE,
Sale != "Sale" ~ FALSE
)) %>%
ggplot(aes(x=date, y = spend)) +
geom_line(size = 1) +
geom_line(aes(x=date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) +
ylab("£")
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ TRUE,
Sale != "Sale" ~ FALSE
)) %>% ungroup() %>%
ggplot(aes(x=date, y = spend)) +
geom_line(size = 1) +
geom_line(aes(x=date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) +
ylab("£")
historic %>% ggplot(aes(x=date, y=revenue)) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend)) +
geom_area(aes(y=Sale*max(revenue)), fill="yellow")
historic$Salevec <- historic$Sale %in% c("Sale")
View(historic)
historic %>% ggplot(aes(x=date, y=revenue)) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend)) +
geom_area(aes(y=Salevec*max(revenue)), fill="yellow")
historic %>% ggplot(aes(x=date, y=revenue)) +
geom_area(aes(y=Salevec*max(revenue)), fill="yellow") + geom_line(col='blue') +
geom_line(aes(x=date, y= spend))
historic %>% ggplot(aes(x=date, y=revenue)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend))
historic %>% ggplot(aes(x=date, y=revenue)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend)) +
ylim(0, maxsrev+1000) +
ylab("£")
historic %>% ggplot(aes(x=date, y=revenue)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend))
maxsrev <- max(historic$revenue)
historic %>% ggplot(aes(x=date, y=revenue)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend)) +
ylim(0, maxsrev+1000) +
ylab("£")
plot3 <- historic %>% ggplot(aes(x=date, y=revenue)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend)) +
ylim(0, maxsrev+1000) +
ylab("£")
plot3 <- historic %>% ggplot(aes(x=date, y=revenue)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend)) +
ylim(0, maxsrev+1000) +
ylab("£")
knitr::opts_chunk$set(echo = TRUE)
library(shinythemes)
library(lubridate)
library(dplyr)
library(tidyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
library(purrr)
library(broom)
library(stringr)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head
historic$spend <- 5000
for (i in 2:nrow(historic)) {
historic$spend[i] <- (historic$spend[i-1] + runif(1, min=30, max=50) - i/11) %>% round(2)
}
for (i in 1:nrow(historic)) {
historic$spend[i] <- (historic$spend[i] + runif(1, min=-500, max=500)) %>% round(digits = 2)
}
historic %>% head %>% formattable()
plot1 <- historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 20000)
ggplotly(plot1)
historic <- historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1 ~ "Sale",
!(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1) ~ "BAU"))
historic %>% datatable
for (i in 1:nrow(historic)) {
if (historic$Sale[i]=="Sale") {
historic$spend[i] <- (historic$spend[i] + runif(1, min=2000, max=4000)) %>% round(2)
}
}
maxspend <- max(historic$spend)
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend)) +
ylim(0, maxspend+1000) + ylab("Spend")
historic$revenue <- 0
for (i in 1:nrow(historic)) {
historic$revenue[i] <- (historic$spend[i] * (3.5 + runif(1, min=-.5, max=.5)+i/400)) %>% round(2)
}
for (i in 1:nrow(historic)) {
if (historic$Sale=="Sale") {
historic$revenue[i] <- historic$revenue[i] * (runif(1, min=2, max=4)+i/100)
}
}
maxsrev <- max(historic$revenue)
historic$Salevec <- historic$Sale %in% c("Sale")
plot3 <- historic %>% ggplot(aes(x=date, y=revenue)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) + geom_line(col='blue') +
geom_line(aes(x=date, y= spend)) +
ylim(0, maxsrev+1000) +
ylab("£")
ggplotly(plot3)
historic %>%
mutate(ROAS = revenue/spend) %>%
slice(nrow(historic):360)
ggplotly(plot3)
plot3 <- historic %>% ggplot(aes(x=date, y=revenue)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) + geom_line(col='blue') +
geom_line(aes(y= spend)) +
ylim(0, maxsrev+1000) +
ylab("£")
ggplotly(plot3)
for (i in 1:nrow(historic)) {
if (historic$week_day[i]=="Thu") {
historic$revenue[i] <- historic$revenue[i] * 1.2
}
}
plot4 <- historic %>%
ggplot(aes(x = date)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) +
geom_line(aes(y = spend)) +
geom_line(aes(y = revenue), col = "dark green") +
ylim(0, maxsrev+1000) + ylab("Spend")
plot4
historic %>%
mutate(ROAS = round(revenue/spend,2)) %>%
slice(360:nrow(historic)) %>% datatable()
plot4 <- historic %>%
ggplot(aes(x = date)) +
geom_area(aes(y=Salevec*max(revenue)), fill="light blue", alpha = .7) +
geom_line(aes(y = spend)) +
geom_line(aes(y = revenue), col = "dark green") +
ylab("Spend")
plot4
ggplotly(plot4)
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Mon = case_when(week_day == "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tue = case_when(week_day == "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wed = case_when(week_day == "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thu = case_when(week_day == "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Fri = case_when(week_day == "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Sat = case_when(week_day == "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sun = case_when(week_day == "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
varlist = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
models <- lapply(varlist, function(x) {
lm(substitute(revenue ~ spend  + i, list(i = as.name(x))), data = historic) %>%
summary() %>%
broom::tidy() %>%
filter(str_detect(term, 'TRUE')) %>%
mutate_if(is.numeric, round, 3) %>%
mutate(term = substr(term, 1, 3))
})
weekday_models <- models %>% bind_rows()
weekday_models %>% formattable()
models2 <- lapply(varlist, function(x) {
lm(substitute(revenue ~ spend + Sale  + i, list(i = as.name(x))), data = historic) %>%
summary() %>%
broom::tidy() %>%
mutate_if(is.numeric, round, 3) %>%
select(term, estimate) %>%
spread(term, estimate) %>%
select(SaleSale, spend) %>%
mutate(term = x)
})
weekday_models <- weekday_models %>%
left_join(models2 %>% bind_rows(), by = "term")
weekday_models %>% formattable()
runApp()
