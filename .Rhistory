)
plot4 <- historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
ggplotly(plot4)
historic %>%
mutate(ROAS = round(revenue/spend,2)) %>%
slice(360:nrow(historic)) %>% datatable()
historic <- historic %>%
mutate(
day = factor(week_day, ordered = TRUE, levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")),
Sale = factor(Sale, ordered = FALSE)
)
historic$Sale <- contrasts(historic$Sale)
mod <- lm(revenue ~ spend + day + Sale, data = historic)
mod_summary <- summary(mod) %>% tidy() %>%
mutate(
estimate = round(estimate,3),
std.error = round(std.error,3),
statistic = round(statistic,3),
p.value = round(p.value,3)
)
coefs <- mod$coefficients
coefs
historic <- historic %>%
mutate(
day = factor(week_day, ordered = TRUE, levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")),
Sale = factor(Sale, ordered = FALSE)
)
historic$Sale <- contrasts(historic$Sale)
mod <- lm(revenue ~ spend + day + Sale, data = historic)
mod_summary <- summary(mod) %>% tidy() %>%
mutate(
estimate = round(estimate,3),
std.error = round(std.error,3),
statistic = round(statistic,3),
p.value = round(p.value,3)
)
coefs <- mod$coefficients
coefs
table(historic$day, useNA=always)
table(historic$day, useNA=2)
table(historic$day, useNA="always")
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day = "Mon" ~ TRUE, week_day != "Mon" ~ FALSE),
Tuesday = case_when(week_day = "Tue" ~ TRUE, week_day != "Tue" ~ FALSE),
Wednesday = case_when(week_day = "Wed" ~ TRUE, week_day != "Wed" ~ FALSE),
Thursday = case_when(week_day = "Thu" ~ TRUE, week_day != "Thu" ~ FALSE),
Friday = case_when(week_day = "Fri" ~ TRUE, week_day != "Fri" ~ FALSE),
Saturday = case_when(week_day = "Sat" ~ TRUE, week_day != "Sat" ~ FALSE),
Sunday = case_when(week_day = "Sun" ~ TRUE, week_day != "Sun" ~ FALSE)
)
mod <- lm(revenue ~ spend + Sale + Monday + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday, data = historic)
mod_summary <- summary(mod) %>% tidy() %>%
mutate(
estimate = round(estimate,3),
std.error = round(std.error,3),
statistic = round(statistic,3),
p.value = round(p.value,3)
)
coefs <- mod$coefficients
coefs
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(shinythemes)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
# Chunk 2: Dates
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head
# Chunk 3: Spend
historic$spend <- 5000
for (i in 2:nrow(historic)) {
historic$spend[i] <- (historic$spend[i-1] + runif(1, min=30, max=50) - i/11) %>% round(2)
}
for (i in 1:nrow(historic)) {
historic$spend[i] <- (historic$spend[i] + runif(1, min=-500, max=500)) %>% round(digits = 2)
}
historic %>% head %>% formattable()
plot1 <- historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 20000)
ggplotly(plot1)
# Chunk 4: Sales
historic <- historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1 ~ "Sale",
!(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1) ~ "BAU"))
historic %>% datatable
# Chunk 5: Sales spend
for (i in 1:nrow(historic)) {
if (historic$Sale[i]=="Sale") {
historic$spend[i] <- (historic$spend[i] + runif(1, min=2000, max=4000)) %>% round(2)
}
}
maxspend <- max(historic$spend)
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend)) +
ylim(0, maxspend+1000) + ylab("Spend")
# Chunk 6: Revenue
historic$revenue <- 0
suppressWarnings(
for (i in 1:nrow(historic)) {
historic$revenue[i] <- (historic$spend[i] * (3.5 + runif(1, min=-.5, max=.5)+i/400)) %>% round(2)
}
)
suppressWarnings(
for (i in 1:nrow(historic)) {
if (historic$Sale=="Sale") {
historic$revenue[i] <- historic$revenue[i] * (runif(1, min=2, max=4)+i/100)
}
}
)
maxsrev <- max(historic$revenue)
plot3 <- historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
ggplotly(plot3)
historic %>%
mutate(ROAS = revenue/spend) %>%
slice(nrow(historic):360)
# Chunk 7
suppressWarnings(
for (i in 1:nrow(historic)) {
if (historic$week_day=="Thu") {
historic$revenue[i] <- historic$revenue[i] * (runif(1, min=1, max=1.5))
}
}
)
plot4 <- historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
ggplotly(plot4)
historic %>%
mutate(ROAS = round(revenue/spend,2)) %>%
slice(360:nrow(historic)) %>% datatable()
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day = "Mon" ~ TRUE, week_day != "Mon" ~ FALSE),
Tuesday = case_when(week_day = "Tue" ~ TRUE, week_day != "Tue" ~ FALSE),
Wednesday = case_when(week_day = "Wed" ~ TRUE, week_day != "Wed" ~ FALSE),
Thursday = case_when(week_day = "Thu" ~ TRUE, week_day != "Thu" ~ FALSE),
Friday = case_when(week_day = "Fri" ~ TRUE, week_day != "Fri" ~ FALSE),
Saturday = case_when(week_day = "Sat" ~ TRUE, week_day != "Sat" ~ FALSE),
Sunday = case_when(week_day = "Sun" ~ TRUE, week_day != "Sun" ~ FALSE)
)
mod <- lm(revenue ~ spend + Sale + Monday + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday, data = historic)
mod_summary <- summary(mod) %>% tidy() %>%
mutate(
estimate = round(estimate,3),
std.error = round(std.error,3),
statistic = round(statistic,3),
p.value = round(p.value,3)
)
mod_summary
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day = "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tuesday = case_when(week_day = "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wednesday = case_when(week_day = "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thursday = case_when(week_day = "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Friday = case_when(week_day = "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Saturday = case_when(week_day = "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sunday = case_when(week_day = "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
mod <- lm(revenue ~ spend + Sale + Monday + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday, data = historic)
mod_summary <- summary(mod) %>% tidy() %>%
mutate(
estimate = round(estimate,3),
std.error = round(std.error,3),
statistic = round(statistic,3),
p.value = round(p.value,3)
)
mod_summary
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day = "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tuesday = case_when(week_day = "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wednesday = case_when(week_day = "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thursday = case_when(week_day = "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Friday = case_when(week_day = "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Saturday = case_when(week_day = "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sunday = case_when(week_day = "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(shinythemes)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
# Chunk 2: Dates
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head
# Chunk 3: Spend
historic$spend <- 5000
for (i in 2:nrow(historic)) {
historic$spend[i] <- (historic$spend[i-1] + runif(1, min=30, max=50) - i/11) %>% round(2)
}
for (i in 1:nrow(historic)) {
historic$spend[i] <- (historic$spend[i] + runif(1, min=-500, max=500)) %>% round(digits = 2)
}
historic %>% head %>% formattable()
plot1 <- historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 20000)
ggplotly(plot1)
# Chunk 4: Sales
historic <- historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1 ~ "Sale",
!(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date, "month")-1) ~ "BAU"))
historic %>% datatable
# Chunk 5: Sales spend
for (i in 1:nrow(historic)) {
if (historic$Sale[i]=="Sale") {
historic$spend[i] <- (historic$spend[i] + runif(1, min=2000, max=4000)) %>% round(2)
}
}
maxspend <- max(historic$spend)
historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend)) +
ylim(0, maxspend+1000) + ylab("Spend")
# Chunk 6: Revenue
historic$revenue <- 0
suppressWarnings(
for (i in 1:nrow(historic)) {
historic$revenue[i] <- (historic$spend[i] * (3.5 + runif(1, min=-.5, max=.5)+i/400)) %>% round(2)
}
)
suppressWarnings(
for (i in 1:nrow(historic)) {
if (historic$Sale=="Sale") {
historic$revenue[i] <- historic$revenue[i] * (runif(1, min=2, max=4)+i/100)
}
}
)
maxsrev <- max(historic$revenue)
plot3 <- historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
ggplotly(plot3)
historic %>%
mutate(ROAS = revenue/spend) %>%
slice(nrow(historic):360)
# Chunk 7
suppressWarnings(
for (i in 1:nrow(historic)) {
if (historic$week_day=="Thu") {
historic$revenue[i] <- historic$revenue[i] * (runif(1, min=1, max=1.5))
}
}
)
plot4 <- historic %>%
mutate(salevec = case_when(
Sale == "Sale" ~ 1/0
)) %>%
ggplot(aes(x = date, y = salevec)) +
geom_bar(stat = "identity", aes(y=salevec), fill="blue", alpha=.1, width = 1) +
geom_line(aes(x = date, y = spend), size = 1) +
geom_line(aes(x = date, y = revenue), col = "dark green", size = 1) +
ylim(0, maxsrev+1000) + ylab("Spend")
ggplotly(plot4)
historic %>%
mutate(ROAS = round(revenue/spend,2)) %>%
slice(360:nrow(historic)) %>% datatable()
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day = "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tuesday = case_when(week_day = "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wednesday = case_when(week_day = "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thursday = case_when(week_day = "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Friday = case_when(week_day = "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Saturday = case_when(week_day = "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sunday = case_when(week_day = "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
mod <- lm(revenue ~ spend + Sale + Monday + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday, data = historic)
mod_summary <- summary(mod) %>% tidy() %>%
mutate(
estimate = round(estimate,3),
std.error = round(std.error,3),
statistic = round(statistic,3),
p.value = round(p.value,3)
)
mod_summary
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day = "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tuesday = case_when(week_day = "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wednesday = case_when(week_day = "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thursday = case_when(week_day = "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Friday = case_when(week_day = "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Saturday = case_when(week_day = "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sunday = case_when(week_day = "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day == "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tuesday = case_when(week_day == "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wednesday = case_when(week_day == "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thursday = case_when(week_day == "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Friday = case_when(week_day == "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Saturday = case_when(week_day == "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sunday = case_when(week_day = "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day == "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tuesday = case_when(week_day == "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wednesday = case_when(week_day == "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thursday = case_when(week_day == "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Friday = case_when(week_day == "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Saturday = case_when(week_day == "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sunday = case_when(week_day == "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day == "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tuesday = case_when(week_day == "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wednesday = case_when(week_day == "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thursday = case_when(week_day == "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Friday = case_when(week_day == "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Saturday = case_when(week_day == "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sunday = case_when(week_day == "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
mod <- lm(revenue ~ spend + Sale + Monday + Tuesday + Wednesday + Thursday + Friday + Saturday + Sunday, data = historic)
mod_summary <- summary(mod) %>% tidy() %>%
mutate(
estimate = round(estimate,3),
std.error = round(std.error,3),
statistic = round(statistic,3),
p.value = round(p.value,3)
)
mod_summary
mod_summary %>% formattable()
runApp()
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Monday = case_when(week_day == "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tuesday = case_when(week_day == "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wednesday = case_when(week_day == "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thursday = case_when(week_day == "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Friday = case_when(week_day == "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Saturday = case_when(week_day == "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sunday = case_when(week_day == "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
mod <- lm(revenue ~ spend + Sale + Thursday , data = historic)
mod_summary <- summary(mod) %>% tidy() %>%
mutate(
estimate = round(estimate,3),
std.error = round(std.error,3),
statistic = round(statistic,3),
p.value = round(p.value,3)
)
mod_summary %>% formattable()
week <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
class(week)
week.f <- factor(week)
levels(week.f)
week.l <- factor(week, levels=week)
levels(week.l)
week.o <- ordered(week, levels=week)
levels(week.o)
contrasts(week.f)
contrasts(week.l)
contrasts(week.o)
week.un0 <- factor(week, ordered = FALSE)
week.unO %>% contrasts()
contrasts(week.un)
week.un <- factor(week, ordered = FALSE)
contrasts(week.un)
weekdays(1)
wday(1)
wday(1, label = "TRUE")
wday(1, label = TRUE)
wday(1, label = TRUE) %>% str()
for (i in 1:7) {
wday(i, label = TRUE) %>% as.character()
mod <- lm(revenue ~ spend + Sale + historic[c(i)] , data = historic)
summary(mod) %>% tidy()
}
for (i in 1:7) {
i <- wday(i, label = TRUE) %>% as.character()
mod <- lm(revenue ~ spend + Sale + historic[c(i)] , data = historic)
summary(mod) %>% tidy()
}
mod <- lm(revenue ~ spend + Sale + historic[c((paste(i))] , data = historic)
summary(mod) %>% tidy()
}
mod_summary <- summary(mod) %>% tidy() %>%
mutate(
estimate = round(estimate,3),
std.error = round(std.error,3),
statistic = round(statistic,3),
p.value = round(p.value,3)
)
mod_summary %>% formattable()
```
for (i in 1:7) {
for (i in 1:7) {
i <- wday(i, label = TRUE) %>% as.character()
mod <- lm(revenue ~ spend + Sale + historic[c((paste(i))] , data = historic)
summary(mod) %>% tidy()
}
mod <- lm(revenue ~ spend + Sale + historic["Sun"] , data = historic)
summary(mod) %>% tidy()
for (i in 1:7) {
i <- wday(i, label = TRUE) %>% as.character()
mod <- lm(revenue ~ spend + Sale + historic[c("Sun")] , data = historic)
summary(mod) %>% tidy()
}
mod <- lm(revenue ~ spend + Sale + historic[c("Sun")] , data = historic)
summary(mod) %>% tidy()
mod <- lm(revenue ~ spend + Sale + historic[c("Sunday")] , data = historic)
summary(mod) %>% tidy()
mod <- lm(revenue ~ spend + Sale + Sunday , data = historic)
summary(mod) %>% tidy()
historic <- historic %>%
mutate(
Sale = factor(Sale, ordered = FALSE),
Mon = case_when(week_day == "Mon" ~ "TRUE", week_day != "Mon" ~ "FALSE"),
Tue = case_when(week_day == "Tue" ~ "TRUE", week_day != "Tue" ~ "FALSE"),
Wed = case_when(week_day == "Wed" ~ "TRUE", week_day != "Wed" ~ "FALSE"),
Thu = case_when(week_day == "Thu" ~ "TRUE", week_day != "Thu" ~ "FALSE"),
Fri = case_when(week_day == "Fri" ~ "TRUE", week_day != "Fri" ~ "FALSE"),
Sat = case_when(week_day == "Sat" ~ "TRUE", week_day != "Sat" ~ "FALSE"),
Sun = case_when(week_day == "Sun" ~ "TRUE", week_day != "Sun" ~ "FALSE")
)
models <- lapply(varlist, function(x) {
lm(substitute(revenue ~ spend + Sale + i, list(i = as.name(x))), data = historic)
})
seq_along(colnames(historic))
historic %>% select(Mon, Tue, Wed, Thu, Fri, Sat, Sun) %>% seq_along
which( colnames(historic)=="Mon"|"Tue"|"Wed"|"Thu"|"Fri"|"Sat","Sun")
which( colnames(historic)==("Mon"|"Tue"|"Wed"|"Thu"|"Fri"|"Sat","Sun"))
models <- lapply(varlist, function(x) {
lm(substitute(revenue ~ spend + Sale + i, list(i = as.name(x))), data = historic)
})
vaarlist = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
models <- lapply(varlist, function(x) {
lm(substitute(revenue ~ spend + Sale + i, list(i = as.name(x))), data = historic)
})
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
install.packages("purrr")
knitr::opts_chunk$set(echo = TRUE)
library(shinythemes)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
library(purrr)
