install.packages("shiny")
install.packages("shiny")
if (!require("devtools"))
install.packages("devtools")
devtools::install_github("shiny", "rstudio")
install.packages("shiny")
devtools::install_github("shiny", "rstudio")
getOption(repos)
getOption("repos")
options(repos = c(CRAN = "https://cran.rstudio.org"))
install.packages("shiny")
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
library(lubridate)
require("lubridate")
install.packages("lubridate")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(lubridate, dplyr, ggplot2)
library(pacman)
if (!require("pacman")) install.packages("pacman")
install.packages("lubridate")
library(plotly)
install.packages("plotly")
install.packages("formattable")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
install.packages("plotly")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date_seq)
historic
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
date <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date_seq)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$day <- day(historic$date_seq)
historic$day <- day(historic$date,label=TRUE
)
historic$day <- day(historic$date,label=TRUE)
historic$day <- day(historic$date)
historic
historic$day <- weekday(historic$date)
historic
historic$day <- Wday(historic$date, )
historic$day <- lubridate::wday(historic$date)
historic
historic$day <- lubridate::wday(historic$date, label="true")
historic$day <- lubridate::wday(historic$date, label=TRUE)
historic
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq, )
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic
#generate a base spend rate, which varies a random amount each day:
historic$Spend <- 10000 + (runif(1, min=-2000, max=2000))
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000 + (runif(1, min=-2000, max=2000))
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line()
#List the dates where we will be in sale, as a function of the last 5 days of each month.
#function for last day of the month
#build the list
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000 + (runif(length(historic.spend)), min=-2000, max=2000))
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000 + (runif(length(historic.spend), min=-2000, max=2000))
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + historic$spend[i]
}
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line()
#List the dates where we will be in sale, as a function of the last 5 days of each month.
#function for last day of the month
#build the list
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(length(historic.spend), min=-2000, max=2000)
}
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-2000, max=2000)
}
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line()
#List the dates where we will be in sale, as a function of the last 5 days of each month.
#function for last day of the month
#build the list
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-2000, max=2000)
}
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, max(spend))
historic %>%
ggplot(aes(x = date, y = spend),ylim(0, max(spend))) +
geom_line() +
#List the dates where we will be in sale, as a function of the last 5 days of each month.
#function for last day of the month
#build the list
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-2000, max=2000)
}
historic %>%
ggplot(aes(x = date, y = spend),ylim(0, max(spend))) +
geom_line()
#List the dates where we will be in sale, as a function of the last 5 days of each month.
#function for last day of the month
#build the list
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 15000)
#generate a base spend rate, which varies a random amount each day:
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-1000, max=1000)
}
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 15000)
#List the dates where we will be in sale, as a function of the last 5 days of each month.
#function for last day of the month
#build the list
historic$spend <- 10000
historic
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-1000, max=1000)
}
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 15000)
#List the dates where we will be in sale, as a function of the last 5 days of each month.
#function for last day of the month
#build the list
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-1000, max=1000)
}
historic
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 15000)
#List the dates where we will be in sale, as a function of the last 5 days of each month.
#function for last day of the month
#build the list
install.packages("data")
install.packages("DT")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
install.packages("htmltools")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
install.packages("DT")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% datatable()
historic %>% glimpse()
historic %>% head
historic %>% head %>% datatable()
install.packages("formattable")
library(formattable)
historic %>% head %>% formattable()
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-1000, max=1000)
}
datatable(historic)
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 15000)
#List the dates where we will be in sale, as a function of the last 5 days of each month.
#function for last day of the month
#build the list
historic %>% head %>% formattable()
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 15000)
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head %>% formattable()
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-1000, max=1000)
}
historic %>% head %>% formattable()
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 15000)
install.packages("yaml")
install.packages("yaml")
library(knitr)
install.packages("knitr")
install.packages("knitr")
update.packages(ask = FALSE, repos = 'https://cran.r-project.org')
install.packages('knitr', repos = c('https://xran.yihui.name', 'https://cran.r-project.org'))
install.packages("knitr", repos = c("https://xran.yihui.name", "https://cran.r-project.org"))
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
historic %>%
mutate(Sale = if_else(date >= ceiling_date(month(date)-5) | date <= ceiling_date(month(date)) , "Sale",
"BAU"))
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head %>% formattable()
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-1000, max=1000)
}
historic %>% head %>% formattable()
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 15000)
historic %>%
mutate(Sale = if_else(date >= ceiling_date(month(date)-5) | date <= ceiling_date(month(date)) , "Sale",
"BAU"))
historic %>%
mutate(Sale = if_else(date >= ceiling_date(date, "month")-5 | date <= ceiling_date(date,"month") , "Sale",
"BAU"))
historic %>%
mutate(Sale = if_else(date >= ceiling_date(month(date), "month")-5 | date <= ceiling_date(month(date),"month") , "Sale",
"BAU"))
ceiling_date(historic$date)
ceiling_date(month(historic$date))
historic$date
historic$date %>% month()
historic$date %>% month() %>% ceiling_date()
historic$date %>% month(label = TRUE) %>% ceiling_date()
historic$date %>% month() %>% ceiling_date(unit = "day")
historic$date %>% month() %>% ceiling_date(month"")
historic$date %>% month() %>% ceiling_date("month")
historic$date %>% month() %>% ceiling_date(unit ="month")
historic$date[1] %>% month() %>% ceiling_date(unit ="month")
historic$date[1] %>% ceiling_date(unit ="month")
historic$date %>% ceiling_date(unit ="month")
historic$date %>% ceiling_date(unit ="month") -1
historic %>%
mutate(Sale = if_else(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month") , "Sale",
"BAU"))
1 > 2
2>= 2
2 !>= 2
!(2 >=2)
historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month") ~ "Sale",
date !(>= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month")) ~ "BAU"))
historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month") ~ "Sale",
!(date >= ceiling_date(date, "month")-6) & date <= ceiling_date(date,"month")) ~ "BAU")
historic %>% !(date >= ceiling_date(date, "month")-6) & date <= ceiling_date(date,"month")-1)
historic %>% !(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month")-1)
historic %>% (date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month")-1)
hisotric %>% date = date
historic$date = historic$date
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month")-1 ~ "Sale")
historic %>%
historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month")-1 ~ "Sale"))
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(dplyr)
library(ggplot2)
library(plotly)
library(DT)
library(formattable)
date_seq <- seq(ymd("2017-01-01"),ymd("2017-12-31"),"days")
historic <- data.frame(date = date_seq)
historic$week_day <- lubridate::wday(historic$date, label=TRUE)
historic %>% head %>% formattable()
historic$spend <- 10000
for (i in 1:nrow(historic)) {
historic$spend[i] <- historic$spend[i] + runif(1, min=-1000, max=1000)
}
historic %>% head %>% formattable()
historic %>%
ggplot(aes(x = date, y = spend)) +
geom_line() +
ylim(0, 15000)
historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month")-1 ~ "Sale"))
historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month")-1 ~ "Sale"))
historic %>%
mutate(Sale = case_when(date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month")-1 ~ 1))
historic %>%
mutate(Sale = case_when((date >= ceiling_date(date, "month")-6 & date <= ceiling_date(date,"month")-1) ~ "Sale"))
historic %>%
mutate(Sale = case_when(((date >= ceiling_date(date, "month")-6) & (date <= ceiling_date(date,"month")-1)) ~ "Sale"))
historic %>%
mutate(Sale = case_when(date >= (ceiling_date(date, "month")-6) & date <= (ceiling_date(date,"month")-1) ~ "Sale"))
historic %>%
mutate(Sale = case_when(date >= (ceiling_date(date, "month")-6) & date <= (ceiling_date(date,"month")-1) ~ "Sale"))
historic %>%
mutate(date2 = date) %>%
mutate(Sale = case_when(date >= (ceiling_date(date2, "month")-6) & date <= (ceiling_date(date2,"month")-1) ~ "Sale"))
historic %>%
mutate(date2 = date)
View(historic)
historic %>%
mutate(date2 = ceiling_date(date, "month")-1)
historic %>%
mutate(dateup = ceiling_date(date, "month")-1,
datebelow = ceiling_date(date, "month")-6) %>%
mutate(Sale = case_when(date >= datebelow & date <= dateup ~ "Sale"))
historic %>%
mutate(dateup = ceiling_date(date, "month")-1,
datebelow = ceiling_date(date, "month")-6)
historic %>%
mutate(dateup = ceiling_date(date, "month")-1,
datebelow = ceiling_date(date, "month")-6,
Sale = case_when(date >= datebelow & date <= dateup ~ "Sale"))
historic %>%
mutate(dateup = ceiling_date(date, "month")-1,
datebelow = ceiling_date(date, "month")-6) %>%
ungroup() %>%
mutate(Sale = case_when(date >= datebelow & date <= dateup ~ "Sale"))
historic %>%
mutate(dateup = ceiling_date(date, "month")-1,
datebelow = ceiling_date(date, "month")-6) %>%
ungroup() %>%
mutate(Sale = case_when(date >= datebelow & date <= dateup ~ "Sale", TRUE ~ NA_real_))
historic <- historic %>%
mutate(dateup = ceiling_date(date, "month")-1,
datebelow = ceiling_date(date, "month")-6)
historic %>%
mutate(Sale = case_when(date >= datebelow & date <= dateup ~ "Sale", TRUE ~ NA_real_))
View(historic)
historic %>%
mutate(Sale = case_when(date >= historic$datebelow & date <= dateup ~ "Sale", TRUE ~ NA_real_))
historic %>%
mutate(Sale = case_when(date >= historic$datebelow & date <= historic$dateup ~ "Sale", TRUE ~ NA_real_))
historic %>%
mutate(Sale = case_when( (date >= datebelow & date <= dateup) ~ "Sale", TRUE ~ NA_real_))
historic <- historic %>%
mutate(dateup = ceiling_date(date, "month")-1,
datebelow = ceiling_date(date, "month")-6)
historic %>%
mutate(Sale = case_when( (date >= datebelow & date <= dateup) ~ "Sale", TRUE ~ NA_real_))
historic <- historic %>%
mutate(dateup = ceiling_date(date, "month")-1,
datebelow = ceiling_date(date, "month")-6)
historic %>%
mutate(Sale = case_when(date >= datebelow & date <= dateup ~ "Sale", TRUE ~ NA_real_))
historic %>%
mutate(Sale = case_when(date >= ymd(datebelow) & date <= dateup ~ "Sale", TRUE ~ NA_real_))
install.packages("dplyr")
